{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","class","onClick","blue","red","role","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","trim","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.047a3a3d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} bg-body-tertiary`}>\r\n  <div className=\"container-fluid\">\r\n    {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li>*/}\r\n      </ul>\r\n      {/*<form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n  </form>*/}\r\n    <button type=\"button\" class=\"btn btn-primary\" onClick={props.blue}>  </button>\r\n    <button type=\"button\" class=\"btn btn-danger\" onClick={props.red}>  </button>\r\n\r\n      <div className={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'} `}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title:'Set Title Here',\r\n    about:'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase!\",\"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase!\",\"success\");\r\n    }\r\n    const handleReverseClick = ()=>{\r\n        let newText= text.split(\"\").reverse().join(\"\");\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Reverse!\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = ' '\r\n        setText(newText)\r\n        props.showAlert(\"Cleared!\",\"success\");\r\n    }\r\n    const handleOnchange =(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handlecopy =()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied Successfully!\",\"success\");\r\n    }\r\n    const handlExtraSpaces =()=>{\r\n        var newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Space has been Removed!\",\"success\");\r\n    }\r\n    const wordCount = () => {\r\n        let words;\r\n        if (text === \"\") {\r\n          words = 0;\r\n        } else {\r\n          words = text.trim().split(/\\s+/).length;\r\n        }\r\n        return words;\r\n      };\r\n    \r\nconst [text, setText] = useState('');\r\nreturn ( \r\n    <>\r\n    <div className='container' style={{color: props.mode=== 'dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor: props.mode=== 'dark'?'grey':'white', color:props.mode=== 'dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleReverseClick}>Convert to Reverse</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlecopy}>Copy text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlExtraSpaces}>Remove ExtraSapces</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode=== 'dark'?'white':'#042743'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{wordCount()} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div>\r\n      {props.alert && (\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\"; \n//import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n//import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils -  Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils -  Light Mode';\n    }\n  }\n\n  const blue = () => {\n    document.body.style.backgroundColor = 'blue';\n  }\n\n  const red = () => {\n    document.body.style.backgroundColor = 'red';\n  }\n\n  return (\n    <>\n      {/*<Router>*/}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} blue={blue} red={red} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/*<Routes>\n            <Route path=\"/about\" element={<About />} />\n  <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the Text to analyze\" mode={mode} />} />*/}\n            <TextForm showAlert={showAlert} heading=\"Enter the Text to analyze\" mode={mode} />\n          {/*</Routes>*/}\n        </div>\n      {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}